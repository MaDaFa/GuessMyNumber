@{
    ViewBag.Title = "Let's Play";
}

@section featured {
    <section class="featured">
        <div class="content-wrapper">
            <hgroup class="title">
                <h1>@ViewBag.Title.</h1>
                <h2>@ViewBag.Message</h2>
            </hgroup>
            <p>
                You can play as much games as you want at the same time.
                Just select a player to challenge and start using your brain.
            </p>
        </div>
    </section>
}

<input id="userName" type="hidden" value="@User.Identity.Name" />

<div id="mainContainer">
    <div class="pendingGamesContainer">
        <h3>Pending Games</h3>
        <div id="pendingGames">
            No pending games
        </div>
    </div>

    <div class="activeGamesContainer">
        <h3>Active Games</h3>
        <div id="activeGames">
            No active games
        </div>
    </div>

    <div class="playersContainer">
        <h3>Connected Players (<span id="connectedPlayersCount">0</span>)</h3>
        <div>No players connected</div>
    </div>
</div>

<div class="connectedPlayer template clear-fix" style="display: none;">
    <span class="userName"></span>
    <span class="icon link small play" title="Play"></span>
    <span class="icon link small chat" title="Chat"></span>
</div>

<div class="sentGame template clear-fix" style="display: none;">
    <span class="player1Name"></span> <span class="versus">VS</span> <span class="player2Name"></span>
    <span class="icon small waitingapproval" title="Waiting for approval..."></span>
</div>

<div class="invitedGame template clear-fix" style="display: none;">
    <span class="player1Name"></span> <span class="versus">VS</span> <span class="player2Name"></span>
    <span class="icon link small accept" title="Acept game"></span>
    <span class="icon link small reject" title="Reject game"></span>
</div>

<div id="gameInvitationPanel" style="display: none;">
    <p>You're inviting <span id="invitedPlayerName"></span> to play!</p>
    <p>
        Type your number first: <input id="playerNumber" name="playerNumber" />
    </p>
    <p>
        <span class="icon link small send" title="Send Invite"></span>
    </p>
</div>

@section scripts {
    <script type="text/javascript">
        var gameServer;
        var gameInformation = { UserName: '', Session: '', ConectedPlayersCount: 0 };

        $(document).ready(function () {
            configureLayout();
            configureGameInvitation();

            $("div.connectedPlayer").live("mouseover", function (e) {
                $(this).css("background-color", "lightgray");
                e.preventDefault();
            });

            $("div.connectedPlayer").live("mouseout", function (e) {
                $(this).css("background-color", "white");
                e.preventDefault();
            });

            gameInformation.UserName = $("#userName").val();

            connectToGameServer();
        });

        function configureLayout() {
            var grid = new freewall("#mainContainer");

            grid.fitWidth();
        }

        function configureGameInvitation() {
            $("#gameInvitationPanel").dialog({
                modal: true,
                autoOpen: false,
                resizable: false,
                title: "Starting new game",
                width: 345,
                height: 230
            });

            $("span.icon.small.play").live("click", function (e) {
                var invitedPlayerName = $(this).parent().find("span.userName").text();

                $("#invitedPlayerName").text(invitedPlayerName);
                $("#gameInvitationPanel").dialog("open");
            });

            $("span.icon.small.send").live("click", function (e) {
                var invitedPlayerName = $(this).parents().find("#invitedPlayerName").text();
                var number = $(this).parents("#playerNumber").val();

                sendCreateGameRequest(invitedPlayerName, number);
                loadSentGame(invitedPlayerName);
                $("#gameInvitationPanel").dialog("close");
            });
        }

        function connectToGameServer() {
            var uri = "ws://ec2-54-207-14-192.sa-east-1.compute.amazonaws.com/guessmynumber/api/guessmynumber?userName=" + gameInformation.UserName;

            gameServer = new WebSocket(uri);

            gameServer.onopen = onOpen;
            gameServer.onclose = onClose;
            gameServer.onmessage = onMessage;
            gameServer.onerror = onError;
        }

        function onOpen(e) {
            var getConnectedPlayersRequestObject = { PlayerName: gameInformation.UserName, PageSize: 10 };
            var serializedRequestObject = JSON.stringify(getConnectedPlayersRequestObject);

            var request = { Type: 7, SerializedRequestObject: serializedRequestObject };

            gameServer.send(JSON.stringify(request));
        }

        function onClose(e) {

        }

        function onMessage(e) {
            var notification = JSON.parse(e.data);
            var notificationObject = JSON.parse(notification.SerializedNotificationObject);

            if (notification.Type == 1) { //PlayerConnected
                if (notificationObject.PlayerName != gameInformation.UserName) {
                    notify(notificationObject.Message, "info");
                    loadNewPlayer(notificationObject.PlayerName);
                }
            } else if (notification.Type == 2) { //GameInvite
                notify(notificationObject.Message, "info");
                loadInvitedGame(notificationObject.SessionId, notificationObject.PlayerName);
            } else if (notification.Type == 8) { //SendConnectedPlayers
                gameInformation.ConectedPlayersCount = notificationObject.ConectedPlayersCount;
                loadAllPlayers(notificationObject.ConnectedPlayerNames);
            } else if (notification.Type == 14) { //PlayerDisconnected
                notify(notificationObject.Message, "info");
                unloadPlayer(notificationObject.PlayerName);
            }
        }

        function onError(e) {
            notify(e.data, "error");
        }

        function loadAllPlayers(playersList) {
            if (playersList.length > 0) {
                $("#mainContainer").find(".playersContainer > div").empty();

                $("#connectedPlayersCount").text(gameInformation.ConectedPlayersCount);

                $.each(playersList, function (i, data) {
                    loadPlayer(data);
                });
            }
        }

        function loadNewPlayer(player) {
            if (gameInformation.ConectedPlayersCount == 0) {
                $("#mainContainer").find(".playersContainer > div").empty();
            }

            gameInformation.ConectedPlayersCount = gameInformation.ConectedPlayersCount + 1;

            $("#connectedPlayersCount").text(gameInformation.ConectedPlayersCount);

            loadPlayer(player);
        }

        function loadPlayer(player) {
            var newPlayerDiv = $("div.connectedPlayer.template").clone();
            var playersContainerDiv = $("#mainContainer").find(".playersContainer > div");

            newPlayerDiv.removeClass("template");
            newPlayerDiv.addClass(player);
            newPlayerDiv.find("span.userName").text(player);
            newPlayerDiv.appendTo(playersContainerDiv);
            newPlayerDiv.show("slow");
        }

        function loadSentGame(invitedPlayerName) {
            if ($("#mainContainer").find("#pendingGames").children().length == 0) {
                $("#mainContainer").find("#pendingGames").empty();
            }

            var newSentGameDiv = $("div.sentGame.template").clone();
            var pendingGamesContainerDiv = $("#mainContainer").find("#pendingGames");

            newSentGameDiv.removeClass("template");
            newSentGameDiv.find("span.player1Name").text(gameInformation.UserName);
            newSentGameDiv.find("span.player2Name").text(invitedPlayerName);
            newSentGameDiv.appendTo(pendingGamesContainerDiv);
            newSentGameDiv.show("slow");
        }

        function loadInvitedGame(sessionId, player1Name) {
            if ($("#mainContainer").find("#pendingGames").children().length == 0) {
                $("#mainContainer").find("#pendingGames").empty();
            }

            var newInvitedGameDiv = $("div.invitedGame.template").clone();
            var pendingGamesContainerDiv = $("#mainContainer").find("#pendingGames");

            newInvitedGameDiv.removeClass("template");
            newInvitedGameDiv.addClass(sessionId);
            newInvitedGameDiv.addClass(player1Name);
            newInvitedGameDiv.find("span.player1Name").text(player1Name);
            newInvitedGameDiv.find("span.player2Name").text(gameInformation.UserName);
            newInvitedGameDiv.appendTo(pendingGamesContainerDiv);
            newInvitedGameDiv.show("slow");
        }

        function unloadPlayer(player) {
            gameInformation.ConectedPlayersCount = gameInformation.ConectedPlayersCount - 1;
            $("#connectedPlayersCount").text(gameInformation.ConectedPlayersCount);
            $("div.connectedPlayer." + player).remove();
        }

        function sendCreateGameRequest(invitedPlayerName, number) {
            var createGameRequestObject = { PlayerName: gameInformation.UserName, InvitedPlayerName: invitedPlayerName, AdditionalInformation: number };
            var serializedRequest = JSON.stringify(createGameRequestObject);

            var request = { Type: 2, SerializedRequestObject: serializedRequest };

            gameServer.send(JSON.stringify(request));
        }

        function notify(message, type) {
            $.notify(message, type, {
                position: "bottom"
            });
        }
    </script>   
}